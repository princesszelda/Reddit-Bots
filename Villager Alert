# Udpated implementation of the villager alert bot for the subreddit 
# /r/AdoptMyVillager. Now stores data on file instead of constant parsing 
# through messages, and you no longer need to enter your username! Also,
# the bot recognizes villager names and will not store data if it is not a 
# villager name.
# 
# Usage: to request a villager, simply comment anywhere on reddit 
# "/u/Villager_Alert_Bot villagername" The bot will
# reply if you enter too few parameters to tell you you did not provide it
# enough information. Please don't reply to these comments (it shouldn't make 
# a difference anyway, but to be safe it's better if you don't).
#
# Happy trading!

import praw 
from time import sleep
from get_vill import villagers_dict, index_dict

def collect(r):
    '''Parses through new messages and writes all villager requests to file'''
    
    users_dict = {}
    dict_file = open('bot_store.txt','a')
    inbox = r.get_unread()
    for mail in inbox:
        split_mail = str(mail).split(' ')
        if split_mail[1].lower() in villagers_dict.values():
            print("ah")
            user = mail.author
            villager = split_mail[1].lower()
            dict_file.write(str(user) + "; " + str(index_dict[villager]) + "\n")
            mail.mark_as_read()
        else:
            mail.reply("That's not a villager name! Try again!")
            mail.mark_as_read()
    dict_file.close()

def fileToDict():
    '''Writes the file data to an easy readable and comparable dictionary.'''
    
    requests = {}
    file = open('bot_store.txt','r')
    for line in file:
        both = line.split()
        user = both[0][:-1]
        villager = villagers_dict[int(both[1])]
        if villager not in requests:
            requests[villager] = [user]
        else:
            requests[villager].append(user)
    file.close()
    print(requests)
    return requests

def villagerMatch(text, requests):
    for key in requests.keys():
        if key in text:
            return key
        
def main():
    '''Goes through new posts to /r/AdoptMyVillager'''
    
    user_agent = "Villager_Alert_Bot 2.0 by /u/TriforceofComputers. \
    Source code available at \
    https://github.com/princesszelda/Reddit-Bots/blob/master/Villager%20Alert"
    r = praw.Reddit(user_agent=user_agent)
    r.login('Villager_Alert_Bot', 'password')
    users_dict = {}
    collect(r)
    requests = fileToDict()
    subreddit = r.get_subreddit('AdoptMyVillager')
    for submission in subreddit.get_new(limit=10):
        text = submission.title.lower()
        lf_only = "[lf]" in text # Filters through text posts just looking for the villager
        villager_match = any(string in text for string in requests.keys())
        if villager_match and submission.id not in complete and not lf_only:
            villager = villagerMatch(text, requests)
            for user in requests[villager]:
                message = "Hey there " + user + ", it looks like " + villager + " has been spotted on /r/AdoptMyVillager. \
                Here's a quick link: " + str(submission.url)
                r.send_message(user,'Villager Found', message)
        complete.add(submission.id)


complete = set()
while True:
    main()
    sleep(30)

